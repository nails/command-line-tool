curDir="$(pwd)"
version="0.6.1"
consolePath="${curDir}/vendor/nailsapp/module-console/console.php"

if [ ! -f $consolePath ]
    then
    echo "Could not find console.php, falling back to nails.php"
    consolePath="${curDir}/nails.php"
fi

# ------------------
# Creates a new Nails application.
# ------------------
if [ "$1" == "new" ]
then

    # Do we have a folder name?
    if [ "$2" != "" ]
    then

        mkdir "$2"
        cd "$2"
        curDir="$(pwd)"
    fi

    # Directory empty?
    if find "$curDir" -maxdepth 0 -empty | read;
    then

        # Reset the consolePath variable to the new style
        consolePath="${curDir}/vendor/nailsapp/module-console/console.php"

        echo ""
        echo ""
        echo "GETTING NAILS SKELETON"
        echo "----------------------"
        git clone https://github.com/nailsapp/skeleton-app.git .

        echo ""
        echo ""
        echo "COMPOSER UPDATE"
        echo "---------------"
        composer update

        echo ""
        echo ""
        echo "BOWER UPDATE"
        echo "------------"
        bower update -S

        echo ""
        echo ""
        echo "NPM INSTALL"
        echo "-----------"
        npm install

        echo ""
        echo ""
        echo "GULP BUILD"
        echo "----------"
        gulp build

        echo ""
        echo ""
        echo "EXECUTING NAILS INSTALLER"
        echo "-------------------------"
        if [ ! -f $consolePath ]
        then

            echo ""
            echo ""
            echo "Not a Nails application or nailsapp/module-console is not installed."
            echo ""
            echo ""

        else

            php $consolePath install

            echo ""
            echo ""
            echo "PREPARING REPOSITORY"
            echo "--------------------"
            rm -rf .git/ && rmdir .git
            git flow init -d
            git add .
            git commit -m "Initial Commit"

            echo ""
            echo ""
            echo "CLEANING UP"
            echo "-----------"
            echo "Complete!"
            echo ""
        fi

    else

        echo ""
        echo "Directory is not empty!"
        echo ""

    fi




# ------------------
# Installs (or reinstalls) an existing Nails application
# ------------------
elif [ "$1" == "install" ]
then

    if [ ! -f $consolePath ]
    then

        echo ""
        echo ""
        echo "Not a Nails application or nailsapp/module-console is not installed."
        echo ""
        echo ""

    else

        echo ""
        echo ""
        echo "COMPOSER INSTALL"
        echo "----------------"
        composer install

        echo ""
        echo ""
        echo "BOWER INSTALL"
        echo "-------------"
        bower install

        echo ""
        echo ""
        echo "NPM INSTALL"
        echo "-----------"
        npm install

        echo ""
        echo ""
        echo "GULP BUILD"
        echo "----------"
        gulp build

        echo ""
        echo ""
        echo "EXECUTING NAILS INSTALLER"
        echo "-------------------------"
        php $consolePath install $2
    fi




# ------------------
# Migrates the application's database
# ------------------
elif [ "$1" == "migrate" ]
then

    if [ ! -f $consolePath ]
    then

        echo ""
        echo ""
        echo "Not a Nails application or nailsapp/module-console is not installed."
        echo ""
        echo ""

    else

        echo ""
        echo ""
        echo "EXECUTING NAILS MIGRATION TOOL"
        echo "------------------------------"
        php $consolePath migrate

    fi




# ------------------
# Upgrades the application and migrates the database
# ------------------
elif [ "$1" == "upgrade" ]
then

    if [ ! -f $consolePath ]
    then

        echo ""
        echo ""
        echo "Not a Nails application or nailsapp/module-console is not installed."
        echo ""
        echo ""

    else

        echo ""
        echo ""
        echo "COMPOSER UPDATE"
        echo "---------------"
        composer update

        echo ""
        echo ""
        echo "BOWER UPDATE"
        echo "------------"
        bower update -S

        echo ""
        echo ""
        echo "NPM INSTALL"
        echo "-----------"
        npm install

        echo ""
        echo ""
        echo "GULP BUILD"
        echo "----------"
        gulp build

        echo ""
        echo ""
        echo "EXECUTING NAILS MIGRATION TOOL"
        echo "------------------------------"
        php $consolePath migrate
    fi




# ------------------
# Runs all the tests
# ------------------
elif [ "$1" == "test" ]
then

    if [ ! -f $consolePath ]
    then

        echo ""
        echo ""
        echo "Not a Nails application or nailsapp/module-console is not installed."
        echo ""
        echo ""

    else

        echo ""
        echo ""
        echo "EXECUTING NAILS TESTING TOOL"
        echo "----------------------------"
        php $consolePath test
    fi




# ------------------
# Pulls a copy of all the Nails repos from GitHub (for development)
# ------------------
elif [ "$1" == "dev" ]
then

    if [ "$2" == "pull" ]
    then

        if [ "$3" == "" ]
        then
            subdir="."
        else
            subdir="$3"
        fi


        # Fetch an uptodate list of Nails repositories, loop through it
        # and clone/pull as required then checkout develop branch
        echo ""
        echo ""
        echo "UPDATING LIST OF REPOSITORIES"
        echo "-----------------------------"
        curl https://api.github.com/orgs/nailsapp/repos?page=1 > repos-page1.json
        curl https://api.github.com/orgs/nailsapp/repos?page=2 > repos-page2.json

        echo ""
        echo ""
        echo "UPDATING REPOSITORIES"
        echo "---------------------"

        parseJson()
        {
            # Work out the repo name, pulled from the JSON
            grep "    \"name\": " $1 | while read -r line ; do

                reponame=$(echo $line | cut -c 10-$(expr ${#line} - 2))

                # Test if the .git directory exists
                if [ -d "$subdir/$reponame/.git" ]; then

                    cd "$curDir/$subdir/$reponame"

                    echo "$reponame: Checking out develop branch"
                    git checkout develop

                    echo "$reponame: Pulling latest changes"
                    git pull origin develop

                    cd $curDir

                else

                    echo "$reponame: Cloning"
                    git clone https://github.com/nailsapp/$reponame.git $subdir/$reponame > /dev/null 2>&1

                    cd "$curDir/$subdir/$reponame"

                    echo "$reponame: Checking out develop branch"
                    git checkout develop

                    cd $curDir
                fi

            done
        }

        # Run once per file
        parseJson repos-page1.json
        parseJson repos-page2.json

    else

        echo ""
        echo "Please specify a command for dev."
        echo ""
        echo "You can use:"
        echo ""
        echo "pull - Clones/pulls all public repositories from the Nails GitHub organisation and"
        echo "       checks out the develop branch. Optionally provide a third argument which is a subdirectory"
        echo "       where repos should be updated or cloned into."
        echo ""

    fi




# ------------------
# shows the version number
# ------------------
elif [ "$1" == "--version" ] || [ "$1" == "-v" ]
then

    echo ""
    echo "Nails Command Line tool $version"
    echo ""




# ------------------
# Shows the tool's help
# ------------------
else

    echo ""
    echo "Please specify a command."
    echo ""
    echo "You can use:"
    echo ""
    echo "new            - Creates a new empty site and runs the Nails installer."
    echo "install        - Checks dependencies are installed then runs the Nails installer."
    echo "migrate        - Runs the Nails Database Migration tool."
    echo "upgrade        - Updates all dependencies then runs the Nails migration tool."
    echo "test           - Runs PHPUnit tests."
    echo "dev            - Contains useful tools for Nails development."
    echo "--version (-v) - Displays version information."
    echo ""
fi